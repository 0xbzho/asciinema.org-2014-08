[[0.014125,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],[">                                                                      ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]],"23":[["                                                                                ",{}]],"24":[["                                                                                ",{}]],"25":[["                                                                                ",{}]],"26":[["                                                                                ",{}]],"27":[["                                                                                ",{}]],"28":[["                                                                                ",{}]],"29":[["                                                                                ",{}]],"30":[["                                                                                ",{}]],"31":[["                                                                                ",{}]],"32":[["                                                                                ",{}]],"33":[["                                                                                ",{}]],"34":[["                                                                                ",{}]],"35":[["                                                                                ",{}]],"36":[["                                                                                ",{}]],"37":[["                                                                                ",{}]],"38":[["                                                                                ",{}]],"39":[["                                                                                ",{}]]},"cursor":{"x":11,"y":0,"visible":true}}],[1.124899,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> p                                                                    ",{}]]},"cursor":{"x":12}}],[0.178831,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> py                                                                   ",{}]]},"cursor":{"x":13}}],[0.172047,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> pyt                                                                  ",{}]]},"cursor":{"x":14}}],[0.101076,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> pyth                                                                 ",{}]]},"cursor":{"x":15}}],[0.099968,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> pytho                                                                ",{}]]},"cursor":{"x":16}}],[0.27305,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> python                                                               ",{}]]},"cursor":{"x":17}}],[0.327903,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> python3                                                              ",{}]]},"cursor":{"x":18}}],[0.216167,{"cursor":{"x":0,"y":1}}],[0.013772,{"lines":{"1":[["Python 3.3.3 (default, Jan  2 2014, 19:09:02)                                   ",{}]],"2":[["[GCC 4.8.2] on linux                                                            ",{}]],"3":[["Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.          ",{}]],"4":[[">>>                                                                             ",{}]]},"cursor":{"x":4,"y":4}}],[1.726204,{"lines":{"4":[[">>> s                                                                           ",{}]]},"cursor":{"x":5}}],[0.346958,{"lines":{"4":[[">>> st                                                                          ",{}]]},"cursor":{"x":6}}],[0.085025,{"lines":{"4":[[">>> str                                                                         ",{}]]},"cursor":{"x":7}}],[1.234046,{"lines":{"5":[["<class 'str'>                                                                   ",{}]],"6":[[">>>                                                                             ",{}]]},"cursor":{"x":4,"y":6}}],[3.474014,{"lines":{"6":[[">>> d                                                                           ",{}]]},"cursor":{"x":5}}],[0.123856,{"lines":{"6":[[">>> di                                                                          ",{}]]},"cursor":{"x":6}}],[0.141043,{"lines":{"6":[[">>> dir                                                                         ",{}]]},"cursor":{"x":7}}],[0.769027,{"lines":{"6":[[">>> dir(                                                                        ",{}]]},"cursor":{"x":8}}],[0.281015,{"lines":{"6":[[">>> dir(s                                                                       ",{}]]},"cursor":{"x":9}}],[0.287968,{"lines":{"6":[[">>> dir(st                                                                      ",{}]]},"cursor":{"x":10}}],[0.049916,{"lines":{"6":[[">>> dir(str                                                                     ",{}]]},"cursor":{"x":11}}],[0.33411,{"lines":{"6":[[">>> dir(str)                                                                    ",{}]]},"cursor":{"x":12}}],[1.835251,{"lines":{"7":[["['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '_",{}]],"8":[["_eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs",{}]],"9":[["__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__'",{}]],"10":[[", '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__r",{}]],"11":[["epr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subcl",{}]],"12":[["asshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', '",{}]],"13":[["expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isd",{}]],"14":[["ecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'issp",{}]],"15":[["ace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'pa",{}]],"16":[["rtition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip",{}]],"17":[["', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate",{}]],"18":[["', 'upper', 'zfill']                                                            ",{}]],"19":[[">>>                                                                             ",{}]]},"cursor":{"x":4,"y":19}}],[4.826756,{"lines":{"19":[[">>> h                                                                           ",{}]]},"cursor":{"x":5}}],[0.188018,{"lines":{"19":[[">>> he                                                                          ",{}]]},"cursor":{"x":6}}],[0.255942,{"lines":{"19":[[">>> hel                                                                         ",{}]]},"cursor":{"x":7}}],[0.110048,{"lines":{"19":[[">>> help                                                                        ",{}]]},"cursor":{"x":8}}],[0.995953,{"lines":{"19":[[">>> help(                                                                       ",{}]]},"cursor":{"x":9}}],[0.31402,{"lines":{"19":[[">>> help(s                                                                      ",{}]]},"cursor":{"x":10}}],[0.282096,{"lines":{"19":[[">>> help(st                                                                     ",{}]]},"cursor":{"x":11}}],[0.079917,{"lines":{"19":[[">>> help(str                                                                    ",{}]]},"cursor":{"x":12}}],[0.398014,{"lines":{"19":[[">>> help(str)                                                                   ",{}]]},"cursor":{"x":13}}],[4.428135,{"cursor":{"x":0,"y":20}}],[0.007979000000000002,{"lines":{"0":[["Help on class str in module builtins:                                           ",{}]],"1":[["                                                                                ",{}]],"2":[["class ",{}],["str",{"bold":true}],["(object)                                                               ",{}]],"3":[[" |  str(object='') -> str                                                       ",{}]],"4":[[" |  str(bytes_or_buffer[, encoding[, errors]]) -> str                           ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  Create a new string object from the given object. If encoding or            ",{}]],"7":[[" |  errors is specified, then the object must expose a data buffer              ",{}]],"8":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"9":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"10":[[" |  or repr(object).                                                            ",{}]],"11":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"12":[[" |  errors defaults to 'strict'.                                                ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  Methods defined here:                                                       ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"17":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"20":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"23":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"26":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"31":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"34":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"37":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"38":[[" |                                                                              ",{}]],"39":[[":                                                                               ",{}]]},"cursor":{"x":1,"y":39}}],[2.460848,{"lines":{"0":[["                                                                                ",{}]],"1":[["class ",{}],["str",{"bold":true}],["(object)                                                               ",{}]],"2":[[" |  str(object='') -> str                                                       ",{}]],"3":[[" |  str(bytes_or_buffer[, encoding[, errors]]) -> str                           ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  Create a new string object from the given object. If encoding or            ",{}]],"6":[[" |  errors is specified, then the object must expose a data buffer              ",{}]],"7":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"8":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"9":[[" |  or repr(object).                                                            ",{}]],"10":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"11":[[" |  errors defaults to 'strict'.                                                ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  Methods defined here:                                                       ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"16":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"19":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"22":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"25":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"30":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"33":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"36":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]]}}],[0.363059,{"lines":{"0":[["class ",{}],["str",{"bold":true}],["(object)                                                               ",{}]],"1":[[" |  str(object='') -> str                                                       ",{}]],"2":[[" |  str(bytes_or_buffer[, encoding[, errors]]) -> str                           ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  Create a new string object from the given object. If encoding or            ",{}]],"5":[[" |  errors is specified, then the object must expose a data buffer              ",{}]],"6":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"7":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"8":[[" |  or repr(object).                                                            ",{}]],"9":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"10":[[" |  errors defaults to 'strict'.                                                ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  Methods defined here:                                                       ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"15":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"18":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"21":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"24":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"29":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"32":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"35":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.259983,{"lines":{"0":[[" |  str(object='') -> str                                                       ",{}]],"1":[[" |  str(bytes_or_buffer[, encoding[, errors]]) -> str                           ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  Create a new string object from the given object. If encoding or            ",{}]],"4":[[" |  errors is specified, then the object must expose a data buffer              ",{}]],"5":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"6":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"7":[[" |  or repr(object).                                                            ",{}]],"8":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"9":[[" |  errors defaults to 'strict'.                                                ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  Methods defined here:                                                       ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"14":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"17":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"20":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"23":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"28":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"31":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"34":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]]}}],[0.231981,{"lines":{"0":[[" |  str(bytes_or_buffer[, encoding[, errors]]) -> str                           ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  Create a new string object from the given object. If encoding or            ",{}]],"3":[[" |  errors is specified, then the object must expose a data buffer              ",{}]],"4":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"5":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"6":[[" |  or repr(object).                                                            ",{}]],"7":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"8":[[" |  errors defaults to 'strict'.                                                ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  Methods defined here:                                                       ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"13":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"16":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"19":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"22":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"27":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"30":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"33":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"38":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]]}}],[0.232004,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  Create a new string object from the given object. If encoding or            ",{}]],"2":[[" |  errors is specified, then the object must expose a data buffer              ",{}]],"3":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"4":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"5":[[" |  or repr(object).                                                            ",{}]],"6":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"7":[[" |  errors defaults to 'strict'.                                                ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  Methods defined here:                                                       ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"12":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"15":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"18":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"21":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"26":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"29":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"32":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"37":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.227024,{"lines":{"0":[[" |  Create a new string object from the given object. If encoding or            ",{}]],"1":[[" |  errors is specified, then the object must expose a data buffer              ",{}]],"2":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"3":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"4":[[" |  or repr(object).                                                            ",{}]],"5":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"6":[[" |  errors defaults to 'strict'.                                                ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  Methods defined here:                                                       ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"11":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"14":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"17":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"20":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"25":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"28":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"31":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"36":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]]}}],[0.215921,{"lines":{"0":[[" |  errors is specified, then the object must expose a data buffer              ",{}]],"1":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"2":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"3":[[" |  or repr(object).                                                            ",{}]],"4":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"5":[[" |  errors defaults to 'strict'.                                                ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  Methods defined here:                                                       ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"10":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"13":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"16":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"19":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"24":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"27":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"30":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"35":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"38":[[" |      x.__hash__() <==> hash(x)                                               ",{}]]}}],[0.207017,{"lines":{"0":[[" |  that will be decoded using the given encoding and error handler.            ",{}]],"1":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"2":[[" |  or repr(object).                                                            ",{}]],"3":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"4":[[" |  errors defaults to 'strict'.                                                ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  Methods defined here:                                                       ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"9":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"12":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"15":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"18":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"23":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"26":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"29":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"34":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"37":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.49997,{"lines":{"0":[[" |  Otherwise, returns the result of object.__str__() (if defined)              ",{}]],"1":[[" |  or repr(object).                                                            ",{}]],"2":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"3":[[" |  errors defaults to 'strict'.                                                ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  Methods defined here:                                                       ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"8":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"11":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"14":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"17":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"22":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"25":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"28":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"33":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"36":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]]}}],[0.030382,{"lines":{"0":[[" |  or repr(object).                                                            ",{}]],"1":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"2":[[" |  errors defaults to 'strict'.                                                ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  Methods defined here:                                                       ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"7":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"10":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"13":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"16":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"21":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"24":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"27":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"32":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"35":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"38":[[" |      x.__iter__() <==> iter(x)                                               ",{}]]}}],[0.030194,{"lines":{"0":[[" |  encoding defaults to sys.getdefaultencoding().                              ",{}]],"1":[[" |  errors defaults to 'strict'.                                                ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  Methods defined here:                                                       ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"6":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"9":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"12":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"15":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"20":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"23":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"26":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"31":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"34":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"37":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030632,{"lines":{"0":[[" |  errors defaults to 'strict'.                                                ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  Methods defined here:                                                       ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"5":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"8":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"11":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"14":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"19":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"22":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"25":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"30":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"33":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"36":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]]}}],[0.030046,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  Methods defined here:                                                       ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"4":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"7":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"10":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"13":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"18":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"21":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"24":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"29":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"32":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"35":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"38":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]]}}],[0.030149,{"lines":{"0":[[" |  Methods defined here:                                                       ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"3":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"6":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"9":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"12":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"17":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"20":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"23":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"28":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"31":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"34":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"37":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030304,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"2":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"5":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"8":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"11":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"16":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"19":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"22":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"27":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"30":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"33":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"36":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]]}}],[0.030374,{"lines":{"0":[[" |  ",{}],["__add__",{"bold":true}],["(...)                                                                ",{}]],"1":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"4":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"7":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"10":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"15":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"18":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"21":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"26":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"29":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"32":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"35":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"38":[[" |      x.__len__() <==> len(x)                                                 ",{}]]}}],[0.030247,{"lines":{"0":[[" |      x.__add__(y) <==> x+y                                                   ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"3":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"6":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"9":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"14":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"17":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"20":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"25":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"28":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"31":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"34":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"37":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.029286,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"2":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"5":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"8":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"13":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"16":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"19":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"24":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"27":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"30":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"33":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"36":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]]}}],[0.03044,{"lines":{"0":[[" |  ",{}],["__contains__",{"bold":true}],["(...)                                                           ",{}]],"1":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"4":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"7":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"12":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"15":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"18":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"23":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"26":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"29":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"32":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"35":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"38":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]]}}],[0.030152,{"lines":{"0":[[" |      x.__contains__(y) <==> y in x                                           ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"3":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"6":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"11":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"14":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"17":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"22":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"25":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"28":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"31":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"34":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"37":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030241,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"2":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"5":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"10":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"13":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"16":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"21":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"24":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"27":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"30":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"33":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"36":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]]}}],[0.030233,{"lines":{"0":[[" |  ",{}],["__eq__",{"bold":true}],["(...)                                                                 ",{}]],"1":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"4":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"9":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"12":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"15":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"20":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"23":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"26":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"29":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"32":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"35":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"38":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]]}}],[0.030191,{"lines":{"0":[[" |      x.__eq__(y) <==> x==y                                                   ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"3":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"8":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"11":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"14":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"19":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"22":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"25":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"28":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"31":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"34":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"37":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030225,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"2":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"7":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"10":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"13":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"18":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"21":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"24":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"27":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"30":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"33":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"36":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]]}}],[0.030216,{"lines":{"0":[[" |  ",{}],["__format__",{"bold":true}],["(...)                                                             ",{}]],"1":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"6":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"9":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"12":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"17":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"20":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"23":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"26":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"29":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"32":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"35":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"38":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]]}}],[0.029084,{"lines":{"0":[[" |      S.__format__(format_spec) -> str                                        ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"5":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"8":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"11":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"16":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"19":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"22":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"25":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"28":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"31":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"34":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"37":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030288,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"4":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"7":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"10":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"15":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"18":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"21":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"24":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"27":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"30":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"33":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"36":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]]}}],[0.030121,{"lines":{"0":[[" |      Return a formatted version of S as described by format_spec.            ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"3":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"6":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"9":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"14":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"17":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"20":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"23":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"26":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"29":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"32":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"35":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"38":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]]}}],[0.030165,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"2":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"5":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"8":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"13":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"16":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"19":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"22":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"25":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"28":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"31":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"34":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"37":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.029482,{"lines":{"0":[[" |  ",{}],["__ge__",{"bold":true}],["(...)                                                                 ",{}]],"1":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"4":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"7":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"12":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"15":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"18":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"21":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"24":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"27":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"30":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"33":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"36":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]]}}],[0.030353,{"lines":{"0":[[" |      x.__ge__(y) <==> x>=y                                                   ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"3":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"6":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"11":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"14":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"17":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"20":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"23":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"26":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"29":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"32":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"35":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"38":[[" |      x.__repr__() <==> repr(x)                                               ",{}]]}}],[0.029756,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"2":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"5":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"10":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"13":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"16":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"19":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"22":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"25":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"28":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"31":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"34":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"37":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.029972,{"lines":{"0":[[" |  ",{}],["__getattribute__",{"bold":true}],["(...)                                                       ",{}]],"1":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"4":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"9":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"12":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"15":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"18":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"21":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"24":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"27":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"30":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"33":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"36":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]]}}],[0.03091,{"lines":{"0":[[" |      x.__getattribute__('name') <==> x.name                                  ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"3":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"8":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"11":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"14":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"17":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"20":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"23":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"26":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"29":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"32":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"35":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"38":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]]}}],[0.030418,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"2":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"7":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"10":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"13":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"16":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"19":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"22":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"25":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"28":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"31":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"34":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"37":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030267,{"lines":{"0":[[" |  ",{}],["__getitem__",{"bold":true}],["(...)                                                            ",{}]],"1":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"6":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"9":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"12":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"15":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"18":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"21":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"24":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"27":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"30":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"33":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"36":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]]}}],[0.030336,{"lines":{"0":[[" |      x.__getitem__(y) <==> x[y]                                              ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"5":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"8":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"11":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"14":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"17":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"20":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"23":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"26":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"29":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"32":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"35":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"38":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]]}}],[0.030307,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"4":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"7":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"10":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"13":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"16":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"19":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"22":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"25":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"28":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"31":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"34":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"37":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.029712,{"lines":{"0":[[" |  ",{}],["__getnewargs__",{"bold":true}],["(...)                                                         ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"3":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"6":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"9":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"12":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"15":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"18":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"21":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"24":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"27":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"30":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"33":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"36":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]]}}],[0.030214,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"2":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"5":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"8":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"11":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"14":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"17":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"20":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"23":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"26":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"29":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"32":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"35":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"38":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]]}}],[0.030227,{"lines":{"0":[[" |  ",{}],["__gt__",{"bold":true}],["(...)                                                                 ",{}]],"1":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"4":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"7":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"10":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"13":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"16":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"19":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"22":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"25":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"28":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"31":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"34":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"37":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.03029,{"lines":{"0":[[" |      x.__gt__(y) <==> x>y                                                    ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"3":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"6":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"9":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"12":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"15":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"18":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"21":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"24":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"27":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"30":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"33":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"36":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]]}}],[0.030178,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"2":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"5":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"8":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"11":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"14":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"17":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"20":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"23":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"26":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"29":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"32":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"35":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"38":[[" |      x.__str__() <==> str(x)                                                 ",{}]]}}],[0.030243,{"lines":{"0":[[" |  ",{}],["__hash__",{"bold":true}],["(...)                                                               ",{}]],"1":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"4":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"7":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"10":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"13":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"16":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"19":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"22":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"25":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"28":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"31":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"34":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"37":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030165,{"lines":{"0":[[" |      x.__hash__() <==> hash(x)                                               ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"3":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"6":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"9":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"12":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"15":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"18":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"21":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"24":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"27":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"30":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"33":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"36":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]]}}],[0.030091,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"2":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"5":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"8":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"11":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"14":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"17":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"20":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"23":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"26":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"29":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"32":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"35":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"38":[[" |      S.capitalize() -> str                                                   ",{}]]}}],[0.030299,{"lines":{"0":[[" |  ",{}],["__iter__",{"bold":true}],["(...)                                                               ",{}]],"1":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"4":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"7":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"10":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"13":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"16":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"19":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"22":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"25":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"28":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"31":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"34":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"37":[[" |      S.capitalize() -> str                                                   ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030093,{"lines":{"0":[[" |      x.__iter__() <==> iter(x)                                               ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"3":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"6":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"9":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"12":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"15":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"18":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"21":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"24":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"27":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"30":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"33":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"36":[[" |      S.capitalize() -> str                                                   ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]]}}],[0.030199,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"2":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"5":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"8":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"11":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"14":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"17":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"20":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"23":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"26":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"29":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"32":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"35":[[" |      S.capitalize() -> str                                                   ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"38":[[" |      have upper case and the rest lower case.                                ",{}]]}}],[0.030179,{"lines":{"0":[[" |  ",{}],["__le__",{"bold":true}],["(...)                                                                 ",{}]],"1":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"4":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"7":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"10":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"13":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"16":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"19":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"22":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"25":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"28":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"31":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"34":[[" |      S.capitalize() -> str                                                   ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"37":[[" |      have upper case and the rest lower case.                                ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030112,{"lines":{"0":[[" |      x.__le__(y) <==> x<=y                                                   ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"3":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"6":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"9":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"12":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"15":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"18":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"21":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"24":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"27":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"30":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"33":[[" |      S.capitalize() -> str                                                   ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"36":[[" |      have upper case and the rest lower case.                                ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]]}}],[0.030088,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"2":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"5":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"8":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"11":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"14":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"17":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"20":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"23":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"26":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"29":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"32":[[" |      S.capitalize() -> str                                                   ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"35":[[" |      have upper case and the rest lower case.                                ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"38":[[" |      S.casefold() -> str                                                     ",{}]]}}],[0.030133,{"lines":{"0":[[" |  ",{}],["__len__",{"bold":true}],["(...)                                                                ",{}]],"1":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"4":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"7":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"10":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"13":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"16":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"19":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"22":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"25":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"28":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"31":[[" |      S.capitalize() -> str                                                   ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"34":[[" |      have upper case and the rest lower case.                                ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"37":[[" |      S.casefold() -> str                                                     ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030216,{"lines":{"0":[[" |      x.__len__() <==> len(x)                                                 ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"3":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"6":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"9":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"12":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"15":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"18":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"21":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"24":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"27":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"30":[[" |      S.capitalize() -> str                                                   ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"33":[[" |      have upper case and the rest lower case.                                ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"36":[[" |      S.casefold() -> str                                                     ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]]}}],[0.030135,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"2":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"5":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"8":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"11":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"14":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"17":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"20":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"23":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"26":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"29":[[" |      S.capitalize() -> str                                                   ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"32":[[" |      have upper case and the rest lower case.                                ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"35":[[" |      S.casefold() -> str                                                     ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030213,{"lines":{"0":[[" |  ",{}],["__lt__",{"bold":true}],["(...)                                                                 ",{}]],"1":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"4":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"7":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"10":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"13":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"16":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"19":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"22":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"25":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"28":[[" |      S.capitalize() -> str                                                   ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"31":[[" |      have upper case and the rest lower case.                                ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"34":[[" |      S.casefold() -> str                                                     ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]]}}],[0.030126,{"lines":{"0":[[" |      x.__lt__(y) <==> x<y                                                    ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"3":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"6":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"9":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"12":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"15":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"18":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"21":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"24":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"27":[[" |      S.capitalize() -> str                                                   ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"30":[[" |      have upper case and the rest lower case.                                ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"33":[[" |      S.casefold() -> str                                                     ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"38":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]]}}],[0.030423,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"2":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"5":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"8":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"11":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"14":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"17":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"20":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"23":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"26":[[" |      S.capitalize() -> str                                                   ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"29":[[" |      have upper case and the rest lower case.                                ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"32":[[" |      S.casefold() -> str                                                     ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"37":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030148,{"lines":{"0":[[" |  ",{}],["__mod__",{"bold":true}],["(...)                                                                ",{}]],"1":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"4":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"7":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"10":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"13":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"16":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"19":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"22":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"25":[[" |      S.capitalize() -> str                                                   ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"28":[[" |      have upper case and the rest lower case.                                ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"31":[[" |      S.casefold() -> str                                                     ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"36":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |      Return S centered in a string of length width. Padding is               ",{}]]}}],[0.029218,{"lines":{"0":[[" |      x.__mod__(y) <==> x%y                                                   ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"3":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"6":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"9":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"12":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"15":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"18":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"21":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"24":[[" |      S.capitalize() -> str                                                   ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"27":[[" |      have upper case and the rest lower case.                                ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"30":[[" |      S.casefold() -> str                                                     ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"35":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"38":[[" |      done using the specified fill character (default is a space)            ",{}]]}}],[0.03028,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"2":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"5":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"8":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"11":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"14":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"17":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"20":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"23":[[" |      S.capitalize() -> str                                                   ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"26":[[" |      have upper case and the rest lower case.                                ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"29":[[" |      S.casefold() -> str                                                     ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"34":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"37":[[" |      done using the specified fill character (default is a space)            ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030643,{"lines":{"0":[[" |  ",{}],["__mul__",{"bold":true}],["(...)                                                                ",{}]],"1":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"4":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"7":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"10":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"13":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"16":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"19":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"22":[[" |      S.capitalize() -> str                                                   ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"25":[[" |      have upper case and the rest lower case.                                ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"28":[[" |      S.casefold() -> str                                                     ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"33":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"36":[[" |      done using the specified fill character (default is a space)            ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]]}}],[0.030272,{"lines":{"0":[[" |      x.__mul__(n) <==> x*n                                                   ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"3":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"6":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"9":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"12":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"15":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"18":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"21":[[" |      S.capitalize() -> str                                                   ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"24":[[" |      have upper case and the rest lower case.                                ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"27":[[" |      S.casefold() -> str                                                     ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"32":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"35":[[" |      done using the specified fill character (default is a space)            ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"38":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]]}}],[0.029757,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"2":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"5":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"8":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"11":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"14":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"17":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"20":[[" |      S.capitalize() -> str                                                   ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"23":[[" |      have upper case and the rest lower case.                                ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"26":[[" |      S.casefold() -> str                                                     ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"31":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"34":[[" |      done using the specified fill character (default is a space)            ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"37":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.031693,{"lines":{"0":[[" |  ",{}],["__ne__",{"bold":true}],["(...)                                                                 ",{}]],"1":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"4":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"7":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"10":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"13":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"16":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"19":[[" |      S.capitalize() -> str                                                   ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"22":[[" |      have upper case and the rest lower case.                                ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"25":[[" |      S.casefold() -> str                                                     ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"30":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"33":[[" |      done using the specified fill character (default is a space)            ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"36":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]]}}],[0.029987,{"lines":{"0":[[" |      x.__ne__(y) <==> x!=y                                                   ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"3":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"6":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"9":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"12":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"15":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"18":[[" |      S.capitalize() -> str                                                   ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"21":[[" |      have upper case and the rest lower case.                                ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"24":[[" |      S.casefold() -> str                                                     ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"29":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"32":[[" |      done using the specified fill character (default is a space)            ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"35":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"38":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]]}}],[0.030268,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"2":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"5":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"8":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"11":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"14":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"17":[[" |      S.capitalize() -> str                                                   ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"20":[[" |      have upper case and the rest lower case.                                ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"23":[[" |      S.casefold() -> str                                                     ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"28":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"31":[[" |      done using the specified fill character (default is a space)            ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"34":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"37":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]],"38":[[" |      interpreted as in slice notation.                                       ",{}]]}}],[0.030248,{"lines":{"0":[[" |  ",{}],["__repr__",{"bold":true}],["(...)                                                               ",{}]],"1":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"4":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"7":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"10":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"13":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"16":[[" |      S.capitalize() -> str                                                   ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"19":[[" |      have upper case and the rest lower case.                                ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"22":[[" |      S.casefold() -> str                                                     ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"27":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"30":[[" |      done using the specified fill character (default is a space)            ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"33":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"36":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]],"37":[[" |      interpreted as in slice notation.                                       ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030164,{"lines":{"0":[[" |      x.__repr__() <==> repr(x)                                               ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"3":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"6":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"9":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"12":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"15":[[" |      S.capitalize() -> str                                                   ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"18":[[" |      have upper case and the rest lower case.                                ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"21":[[" |      S.casefold() -> str                                                     ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"26":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"29":[[" |      done using the specified fill character (default is a space)            ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"32":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"35":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]],"36":[[" |      interpreted as in slice notation.                                       ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |  ",{}],["encode",{"bold":true}],["(...)                                                                 ",{}]]}}],[0.030141,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"2":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"5":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"8":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"11":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"14":[[" |      S.capitalize() -> str                                                   ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"17":[[" |      have upper case and the rest lower case.                                ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"20":[[" |      S.casefold() -> str                                                     ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"25":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"28":[[" |      done using the specified fill character (default is a space)            ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"31":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"34":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]],"35":[[" |      interpreted as in slice notation.                                       ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |  ",{}],["encode",{"bold":true}],["(...)                                                                 ",{}]],"38":[[" |      S.encode(encoding='utf-8', errors='strict') -> bytes                    ",{}]]}}],[0.030228,{"lines":{"0":[[" |  ",{}],["__rmod__",{"bold":true}],["(...)                                                               ",{}]],"1":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"4":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"7":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"10":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"13":[[" |      S.capitalize() -> str                                                   ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"16":[[" |      have upper case and the rest lower case.                                ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"19":[[" |      S.casefold() -> str                                                     ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"24":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"27":[[" |      done using the specified fill character (default is a space)            ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"30":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"31":[[" |                                                                              ",{}]],"32":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"33":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]],"34":[[" |      interpreted as in slice notation.                                       ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |  ",{}],["encode",{"bold":true}],["(...)                                                                 ",{}]],"37":[[" |      S.encode(encoding='utf-8', errors='strict') -> bytes                    ",{}]],"38":[[" |                                                                              ",{}]]}}],[0.030247,{"lines":{"0":[[" |      x.__rmod__(y) <==> y%x                                                  ",{}]],"1":[[" |                                                                              ",{}]],"2":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"3":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"4":[[" |                                                                              ",{}]],"5":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"6":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"7":[[" |                                                                              ",{}]],"8":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"9":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"10":[[" |                                                                              ",{}]],"11":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"12":[[" |      S.capitalize() -> str                                                   ",{}]],"13":[[" |                                                                              ",{}]],"14":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"15":[[" |      have upper case and the rest lower case.                                ",{}]],"16":[[" |                                                                              ",{}]],"17":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"18":[[" |      S.casefold() -> str                                                     ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"21":[[" |                                                                              ",{}]],"22":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"23":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"24":[[" |                                                                              ",{}]],"25":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"26":[[" |      done using the specified fill character (default is a space)            ",{}]],"27":[[" |                                                                              ",{}]],"28":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"29":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"30":[[" |                                                                              ",{}]],"31":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"32":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]],"33":[[" |      interpreted as in slice notation.                                       ",{}]],"34":[[" |                                                                              ",{}]],"35":[[" |  ",{}],["encode",{"bold":true}],["(...)                                                                 ",{}]],"36":[[" |      S.encode(encoding='utf-8', errors='strict') -> bytes                    ",{}]],"37":[[" |                                                                              ",{}]],"38":[[" |      Encode S using the codec registered for encoding. Default encoding      ",{}]]}}],[0.030215,{"lines":{"0":[[" |                                                                              ",{}]],"1":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"2":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"3":[[" |                                                                              ",{}]],"4":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"5":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"6":[[" |                                                                              ",{}]],"7":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"8":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"9":[[" |                                                                              ",{}]],"10":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"11":[[" |      S.capitalize() -> str                                                   ",{}]],"12":[[" |                                                                              ",{}]],"13":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"14":[[" |      have upper case and the rest lower case.                                ",{}]],"15":[[" |                                                                              ",{}]],"16":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"17":[[" |      S.casefold() -> str                                                     ",{}]],"18":[[" |                                                                              ",{}]],"19":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"20":[[" |                                                                              ",{}]],"21":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"22":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"23":[[" |                                                                              ",{}]],"24":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"25":[[" |      done using the specified fill character (default is a space)            ",{}]],"26":[[" |                                                                              ",{}]],"27":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"28":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"29":[[" |                                                                              ",{}]],"30":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"31":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]],"32":[[" |      interpreted as in slice notation.                                       ",{}]],"33":[[" |                                                                              ",{}]],"34":[[" |  ",{}],["encode",{"bold":true}],["(...)                                                                 ",{}]],"35":[[" |      S.encode(encoding='utf-8', errors='strict') -> bytes                    ",{}]],"36":[[" |                                                                              ",{}]],"37":[[" |      Encode S using the codec registered for encoding. Default encoding      ",{}]],"38":[[" |      is 'utf-8'. errors may be given to set a different error                ",{}]]}}],[0.030329,{"lines":{"0":[[" |  ",{}],["__rmul__",{"bold":true}],["(...)                                                               ",{}]],"1":[[" |      x.__rmul__(n) <==> n*x                                                  ",{}]],"2":[[" |                                                                              ",{}]],"3":[[" |  ",{}],["__sizeof__",{"bold":true}],["(...)                                                             ",{}]],"4":[[" |      S.__sizeof__() -> size of S in memory, in bytes                         ",{}]],"5":[[" |                                                                              ",{}]],"6":[[" |  ",{}],["__str__",{"bold":true}],["(...)                                                                ",{}]],"7":[[" |      x.__str__() <==> str(x)                                                 ",{}]],"8":[[" |                                                                              ",{}]],"9":[[" |  ",{}],["capitalize",{"bold":true}],["(...)                                                             ",{}]],"10":[[" |      S.capitalize() -> str                                                   ",{}]],"11":[[" |                                                                              ",{}]],"12":[[" |      Return a capitalized version of S, i.e. make the first character        ",{}]],"13":[[" |      have upper case and the rest lower case.                                ",{}]],"14":[[" |                                                                              ",{}]],"15":[[" |  ",{}],["casefold",{"bold":true}],["(...)                                                               ",{}]],"16":[[" |      S.casefold() -> str                                                     ",{}]],"17":[[" |                                                                              ",{}]],"18":[[" |      Return a version of S suitable for caseless comparisons.                ",{}]],"19":[[" |                                                                              ",{}]],"20":[[" |  ",{}],["center",{"bold":true}],["(...)                                                                 ",{}]],"21":[[" |      S.center(width[, fillchar]) -> str                                      ",{}]],"22":[[" |                                                                              ",{}]],"23":[[" |      Return S centered in a string of length width. Padding is               ",{}]],"24":[[" |      done using the specified fill character (default is a space)            ",{}]],"25":[[" |                                                                              ",{}]],"26":[[" |  ",{}],["count",{"bold":true}],["(...)                                                                  ",{}]],"27":[[" |      S.count(sub[, start[, end]]) -> int                                     ",{}]],"28":[[" |                                                                              ",{}]],"29":[[" |      Return the number of non-overlapping occurrences of substring sub in    ",{}]],"30":[[" |      string S[start:end].  Optional arguments start and end are              ",{}]],"31":[[" |      interpreted as in slice notation.                                       ",{}]],"32":[[" |                                                                              ",{}]],"33":[[" |  ",{}],["encode",{"bold":true}],["(...)                                                                 ",{}]],"34":[[" |      S.encode(encoding='utf-8', errors='strict') -> bytes                    ",{}]],"35":[[" |                                                                              ",{}]],"36":[[" |      Encode S using the codec registered for encoding. Default encoding      ",{}]],"37":[[" |      is 'utf-8'. errors may be given to set a different error                ",{}]],"38":[[" |      handling scheme. Default is 'strict' meaning that encoding errors raise ",{}]]}}],[4.55317,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> python3                                                              ",{}]],"1":[["Python 3.3.3 (default, Jan  2 2014, 19:09:02)                                   ",{}]],"2":[["[GCC 4.8.2] on linux                                                            ",{}]],"3":[["Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.          ",{}]],"4":[[">>> str                                                                         ",{}]],"5":[["<class 'str'>                                                                   ",{}]],"6":[[">>> dir(str)                                                                    ",{}]],"7":[["['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '_",{}]],"8":[["_eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs",{}]],"9":[["__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__'",{}]],"10":[[", '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__r",{}]],"11":[["epr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subcl",{}]],"12":[["asshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', '",{}]],"13":[["expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isd",{}]],"14":[["ecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'issp",{}]],"15":[["ace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'pa",{}]],"16":[["rtition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip",{}]],"17":[["', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate",{}]],"18":[["', 'upper', 'zfill']                                                            ",{}]],"19":[[">>> help(str)                                                                   ",{}]],"20":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["                                                                                ",{}]],"23":[["                                                                                ",{}]],"24":[["                                                                                ",{}]],"25":[["                                                                                ",{}]],"26":[["                                                                                ",{}]],"27":[["                                                                                ",{}]],"28":[["                                                                                ",{}]],"29":[["                                                                                ",{}]],"30":[["                                                                                ",{}]],"31":[["                                                                                ",{}]],"32":[["                                                                                ",{}]],"33":[["                                                                                ",{}]],"34":[["                                                                                ",{}]],"35":[["                                                                                ",{}]],"36":[["                                                                                ",{}]],"37":[["                                                                                ",{}]],"38":[["                                                                                ",{}]],"39":[["                                                                                ",{}]]},"cursor":{"x":0,"y":20}}],[0.000202,{"lines":{"21":[[">>>                                                                             ",{}]]},"cursor":{"x":4,"y":21}}],[1.410749,{"lines":{"21":[[">>> h                                                                           ",{}]]},"cursor":{"x":5}}],[0.154007,{"lines":{"21":[[">>> he                                                                          ",{}]]},"cursor":{"x":6}}],[0.26005,{"lines":{"21":[[">>> hel                                                                         ",{}]]},"cursor":{"x":7}}],[0.113909,{"lines":{"21":[[">>> help                                                                        ",{}]]},"cursor":{"x":8}}],[0.36811,{"lines":{"21":[[">>> help(                                                                       ",{}]]},"cursor":{"x":9}}],[0.657959,{"lines":{"21":[[">>> help(s                                                                      ",{}]]},"cursor":{"x":10}}],[0.338048,{"lines":{"21":[[">>> help(st                                                                     ",{}]]},"cursor":{"x":11}}],[0.061854,{"lines":{"21":[[">>> help(str                                                                    ",{}]]},"cursor":{"x":12}}],[0.225049,{"lines":{"21":[[">>> help(str.                                                                   ",{}]]},"cursor":{"x":13}}],[0.310072,{"lines":{"21":[[">>> help(str.c                                                                  ",{}]]},"cursor":{"x":14}}],[0.135893,{"lines":{"21":[[">>> help(str.co                                                                 ",{}]]},"cursor":{"x":15}}],[0.096111,{"lines":{"21":[[">>> help(str.cou                                                                ",{}]]},"cursor":{"x":16}}],[0.255912,{"lines":{"21":[[">>> help(str.coun                                                               ",{}]]},"cursor":{"x":17}}],[0.086102,{"lines":{"21":[[">>> help(str.count                                                              ",{}]]},"cursor":{"x":18}}],[0.33896,{"lines":{"21":[[">>> help(str.count)                                                             ",{}]]},"cursor":{"x":19}}],[0.872523,{"cursor":{"x":0,"y":22}}],[0.0008620000000000001,{"lines":{"0":[["                                                                                ",{}]],"1":[["                                                                                ",{}]],"2":[["                                                                                ",{}]],"3":[["                                                                                ",{}]],"4":[["                                                                                ",{}]],"5":[["                                                                                ",{}]],"6":[["                                                                                ",{}]],"7":[["                                                                                ",{}]],"8":[["                                                                                ",{}]],"9":[["                                                                                ",{}]],"10":[["                                                                                ",{}]],"11":[["                                                                                ",{}]],"12":[["                                                                                ",{}]],"13":[["                                                                                ",{}]],"14":[["                                                                                ",{}]],"15":[["                                                                                ",{}]],"16":[["                                                                                ",{}]],"17":[["                                                                                ",{}]],"18":[["                                                                                ",{}]],"19":[["                                                                                ",{}]],"21":[["                                                                                ",{}]],"22":[["Help on method_descriptor:                                                      ",{}]],"24":[["count",{"bold":true}],["(...)                                                                      ",{}]],"25":[["    S.count(sub[, start[, end]]) -> int                                         ",{}]],"27":[["    Return the number of non-overlapping occurrences of substring sub in        ",{}]],"28":[["    string S[start:end].  Optional arguments start and end are                  ",{}]],"29":[["    interpreted as in slice notation.                                           ",{}]],"30":[["(END)",{"inverse":true}],["                                                                           ",{}]]},"cursor":{"x":5,"y":30}}],[4.42767,{"lines":{"0":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> python3                                                              ",{}]],"1":[["Python 3.3.3 (default, Jan  2 2014, 19:09:02)                                   ",{}]],"2":[["[GCC 4.8.2] on linux                                                            ",{}]],"3":[["Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.          ",{}]],"4":[[">>> str                                                                         ",{}]],"5":[["<class 'str'>                                                                   ",{}]],"6":[[">>> dir(str)                                                                    ",{}]],"7":[["['__add__', '__class__', '__contains__', '__delattr__', '__dir__', '__doc__', '_",{}]],"8":[["_eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs",{}]],"9":[["__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__'",{}]],"10":[[", '__mod__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__r",{}]],"11":[["epr__', '__rmod__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subcl",{}]],"12":[["asshook__', 'capitalize', 'casefold', 'center', 'count', 'encode', 'endswith', '",{}]],"13":[["expandtabs', 'find', 'format', 'format_map', 'index', 'isalnum', 'isalpha', 'isd",{}]],"14":[["ecimal', 'isdigit', 'isidentifier', 'islower', 'isnumeric', 'isprintable', 'issp",{}]],"15":[["ace', 'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'maketrans', 'pa",{}]],"16":[["rtition', 'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip",{}]],"17":[["', 'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title', 'translate",{}]],"18":[["', 'upper', 'zfill']                                                            ",{}]],"19":[[">>> help(str)                                                                   ",{}]],"21":[[">>> help(str.count)                                                             ",{}]],"22":[["                                                                                ",{}]],"24":[["                                                                                ",{}]],"25":[["                                                                                ",{}]],"27":[["                                                                                ",{}]],"28":[["                                                                                ",{}]],"29":[["                                                                                ",{}]],"30":[["                                                                                ",{}]]},"cursor":{"x":0,"y":22}}],[0.000216,{"lines":{"23":[[">>>                                                                             ",{}]]},"cursor":{"x":4,"y":23}}],[4.515256,{"cursor":{"x":0,"y":24}}],[0.000142,{"lines":{"24":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],[">                                                                      ",{}]]},"cursor":{"x":11}}],[1.158536,{"lines":{"24":[["desktop",{"fg":2,"underline":true}],[":",{}],["~",{"bold":true}],["> exit                                                                 ",{}]]},"cursor":{"x":0,"y":25}}]]