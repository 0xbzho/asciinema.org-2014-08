{"ID":11741,"Author":{"Name":"mhanheide","ID":0,"FullName":"","Gravatar":"61cb1424082055532b9fe7442cbe9ec3"},"Title":"using Bloom to release into the STRANDS ROS build farm","Description":"\u003cdiv class=\"content\"\u003e\u003col\u003e\n\u003cli\u003ecarry out the step of \u003ca href=\"http://wiki.ros.org/bloom/Tutorials/FirstTimeRelease#bloom.2BAC8-Tutorials.2BAC8-PrepareUpstream.Preparing_the_Upstream_Repository\"\u003ePreparing_the_Upstream_Repository\u003c/a\u003e. Be aware that \u003cem\u003eall\u003c/em\u003e \u003ccode\u003epackage.xml\u003c/code\u003e in your repository need to be properly set up (license suggest as MIT, author(s) and maintainer entered), and that they \u003cem\u003eall\u003c/em\u003e need to be at the same version number (\u003ccode\u003e0.0.0\u003c/code\u003e looks like a good starting point). \u003c/li\u003e\n\u003cli\u003ecreate a \u003ca href=\"http://wiki.ros.org/bloom/Tutorials/FirstTimeRelease#Creating_a_Release_Repository\"\u003erelease repository\u003c/a\u003e with \u003cem\u003ethe same name\u003c/em\u003e as the repository you plan to release in the github organisation \u003ca href=\"https://github.com/strands-project-releases\"\u003estrands-project-releases\u003c/a\u003e (ask @marc-hanheide for permissions or to do it for you). The repository will be automatically populated and is referred to as RELEASE repository url (see \u003ca href=\"https://github.com/strands-project-releases/mongodb_store.git\"\u003ehttps://github.com/strands-project-releases/mongodb_store.git\u003c/a\u003e, for instance)\u003c/li\u003e\n\u003cli\u003e\u003cp\u003euse bloom to \u003ca href=\"http://wiki.ros.org/bloom/Tutorials/FirstTimeRelease#Releasing_Your_Packages\"\u003ecreate the release\u003c/a\u003e:\u003cbr/\u003e\n\u003ccode\u003e\u003cbr/\u003e\nbloom-release --rosdistro hydro --track hydro repository_name --edit\u003cbr/\u003e\n\u003c/code\u003e\u003cbr/\u003e\nThis will interactively ask some information from you:\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003ewhen first asked for the \u003cstrong\u003eRelease repository url\u003c/strong\u003e, enter the git URL for the just created repo (e.g. \u003ccode\u003ehttps://github.com/strands-project-releases/mongodb_store.git\u003c/code\u003e)\u003c/li\u003e\n\u003cli\u003ewhen asked for \u003cstrong\u003eRepository Name\u003c/strong\u003e, please enter the name of your repository, e.g. \u003ccode\u003emongodb_store\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ewhen asked for \u003cstrong\u003eUpstream Repository URI\u003c/strong\u003e, please enter the path to your upstream repository, that is the one hosted in the \u003ccode\u003estrands-project\u003c/code\u003e github organisation that you commit to, e.g. \u003ccode\u003ehttps://github.com/strands-project/mongodb_store.git\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003ewhen asked for \u003cstrong\u003eROS Distro\u003c/strong\u003e, say \u003ccode\u003ehydro\u003c/code\u003e (or \u003ccode\u003eindigo\u003c/code\u003e if that is eventually supported by STRANDS)\u003c/li\u003e\n\u003cli\u003ewhen asked \u003cstrong\u003eWould you like to add documentation information for this repository?\u003c/strong\u003e, say \u003cstrong\u003eno\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003ewhen asked \u003cstrong\u003eWould you like to add source information for this repository?\u003c/strong\u003e, say \u003cstrong\u003eyes\u003c/strong\u003e, and subsequently tner the URL to your active development repository (usually the same as the upstream repo, so in our example: \u003ccode\u003ehttps://github.com/strands-project/mongodb_store.git\u003c/code\u003e again\u003c/li\u003e\n\u003cli\u003eanswer all other questions just by hitting return (accepting the defaults)\u003c/li\u003e\n\u003c/ol\u003e\n\n\u003cp\u003eYou should see bloom creating a lot of stuff for you (debian configurations and other stuff). At the end, bloom should automatically open a pull request against STRANDS\u0026#39; own \u003ca href=\"https://github.com/strands-project/rosdistro/blob/strands-devel/hydro/distribution.yaml\"\u003edistribution.yaml\u003c/a\u003e with your package added to this. The STRANDS software management team will have a look at this and eventually accept it. Then the build farm will create debian packages for you (and package maintainers will receive emails automatically if the build fails) which will then be available for everybody to use. \u003c/p\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e","Time":"2014-08-27T13:47:47Z","Tags":["Linux","bash","xterm"]}